package BankServices.rest;



import javax.ws.rs.Consumes;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import BankServices.dao.CustomerDAO;
import BankServices.dao.SecurityQuestionDAO;
import BankServices.modelo.Customer;
import BankServices.modelo.SecurityQuestion;

import net.sf.json.JSONObject;

@Path("/loginUserPass")
public class BankRest {
	
	@GET
	@Produces(MediaType.APPLICATION_JSON + "; charset=utf-8")
	public String Test( ) {

		
		JSONObject arrayObj = new JSONObject();
		
		try {
			arrayObj.put("response","test");
			
			
		} catch (Exception e) {	
			System.out.println(e.getMessage());
		}
		return arrayObj.toString();
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Produces(MediaType.APPLICATION_JSON)
	public String login(@FormParam("username") String username, 
							@FormParam("password") String password,
							@FormParam("securityAnswer") String securityAnswer, 
							@FormParam("securityQuestionID") Integer securityQuestionID){



		JSONObject jsonObj = new JSONObject();
		
		try {
			if (username == "" || username == null)
			{
				jsonObj.put("return", "errorUsername");
				return jsonObj.toString();
			}
			
			else if (password == "" || password == null)
			{
				jsonObj.put("return", "errorPassword");
				return jsonObj.toString();
			}
			
			
			CustomerDAO dao = new CustomerDAO();
			Customer customer = dao.getCustomerById(username);
			SecurityQuestionDAO SQdao = new SecurityQuestionDAO();
			
			SQdao.getQuestionByCustomerId(customer);
			
			//jsonObj.put("userID", customer.getIdUser());
			//jsonObj.put("password", customer.getPassword());
			//jsonObj.put("name", customer.getName());
			
			if (!password.equals(customer.getPassword()))
			{
				jsonObj.put("return", "errorPassword");
				jsonObj.put("test", customer.getPassword());
				jsonObj.put("input", password);
				return jsonObj.toString();
			}
			
			if (securityAnswer == null || securityAnswer == "" || securityQuestionID == null)
			{
				jsonObj.put("return", "needSecurityQuestion");
				SecurityQuestion SQ = customer.getRandomSecurityQuestion();
				jsonObj.put("securityQuestionID", SQ.getIdQuestion());
				jsonObj.put("securityQuestion", SQ.getQuestion());
				return jsonObj.toString();
			}
			
			SecurityQuestion ResponseSQ = customer.getSecurityQuestion(securityQuestionID);
			if (ResponseSQ == null)
			{
				jsonObj.put("return", "invalidSQid");
				return jsonObj.toString();
			}
			
			if (!securityAnswer.equals(ResponseSQ.getAnswer()) )
			{
				jsonObj.put("return", "incorrectSQAnswer");
				return jsonObj.toString();
			}
			
			
			
						
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		jsonObj.put("return", "success");
		return jsonObj.toString();
	}
	

}
