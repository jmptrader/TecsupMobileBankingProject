package BankServices.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;






import BankServices.modelo.Account;
import BankServices.modelo.Customer;
import BankServices.modelo.Transaction;
import BankServices.excepcion.*;
import BankServices.util.*;

public class TransactionDAO extends BaseDAO {

	
	public void AddTransaction(Account account, Transaction transaction)
	{
		String queryAccount = "update " + account.getAccountName() + " SET CurrentBal=? where AccountNumber=?";
		String queryTransaction = "insert into " + transaction.getTransactionType() 
				+ " (Date, Amount, Description, "+ account.getAccountName() + "_AccountNumber) "
				+ "VALUES ( NOW(),?,?,?)";
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		try{
		con = ConexionBD.obtenerConexion();
		stmt = con.prepareStatement(queryAccount);
		double currentBal = account.getCurrentBal() + transaction.getAmount();
		
		stmt.setDouble(1, currentBal);
		stmt.setString(2, account.getAccountNumber());
		stmt.executeUpdate();
		
		stmt = con.prepareStatement(queryTransaction);
		stmt.setDouble(1, transaction.getAmount());
		stmt.setString(2, transaction.getDescription());
		stmt.setString(3, account.getAccountNumber());
		stmt.executeUpdate();
		
		}
		
		
		catch (SQLException e) {
			System.err.println(e.getMessage());
		} finally {
			this.cerrarResultSet(rs);
			this.cerrarStatement(stmt);
			this.cerrarConexion(con);
		}
		
	}
	/*
	public void AddTransaction(Account accountTo, Account accountFrom, Transaction transaction)
	{
		String queryAccountTo = "update " + accountTo.getAccountName() + " SET CurrentBal=? where AccountNumber=?";
		String queryAccountFrom = "update " + accountFrom.getAccountName() + " SET CurrentBal=? where AccountNumber=?";
		String queryTransaction = "insert into " + transaction.getTransactionType() 
				+ " (Date, Amount, Description, "+ account.getAccountName() + "_AccountNumber) "
				+ "VALUES ( NOW(),?,?,?)";
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		try{
		con = ConexionBD.obtenerConexion();
		stmt = con.prepareStatement(queryAccount);
		double currentBal = account.getCurrentBal() + transaction.getAmount();
		
		stmt.setDouble(1, currentBal);
		stmt.setString(2, account.getAccountNumber());
		stmt.executeUpdate();
		
		stmt = con.prepareStatement(queryTransaction);
		stmt.setDouble(1, transaction.getAmount());
		stmt.setString(2, transaction.getDescription());
		stmt.setString(3, account.getAccountNumber());
		stmt.executeUpdate();
		
		}
		
		
		catch (SQLException e) {
			System.err.println(e.getMessage());
		} finally {
			this.cerrarResultSet(rs);
			this.cerrarStatement(stmt);
			this.cerrarConexion(con);
		}
		*/
	}


}
